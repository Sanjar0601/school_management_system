# Generated by Django 5.1.1 on 2025-01-12 22:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0005_tenantuser_is_teacher_alter_tenantuser_role'),
        ('teacher', '0002_alter_personalinfo_email_alter_personalinfo_phone_no'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.IntegerField(default=-599000)),
                ('transaction_type', models.CharField(choices=[('Payment', 'Payment'), ('Deduction', 'Deduction')], max_length=10)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('auth_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=200)),
                ('amount_spent', models.IntegerField()),
                ('category', models.CharField(blank=True, choices=[('Expense', 'Expense'), ('Income', 'Income')], max_length=150)),
                ('types', models.CharField(blank=True, choices=[('Humo', 'Humo'), ('UzCard', 'UzCard'), ('Click', 'Click'), ('Perevod', 'Perevod'), ('Others', 'Others')], max_length=150)),
                ('auth_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('balance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='student.balance')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('day', models.CharField(choices=[('T/T/S', 'T/T/S'), ('M/W/F', 'M/W/F')], max_length=100)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='teacher.personalinfo')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Comer', 'Comer'), ('Waiting', 'Waiting'), ('Active', 'Active'), ('Unpaid', 'Unpaid'), ('First Lesson', 'First Lesson'), ('Wrong Number', 'Wrong Number'), ('Deposit', 'Deposit'), ('Deleted', 'Deleted'), ('Frozen', 'Frozen'), ('Free', 'Free'), ('Duplicate', 'Duplicate'), ('Another Branch', 'Another Branch')], max_length=20, null=True)),
                ('source', models.CharField(blank=True, choices=[('Instagram', 'Instagram'), ('Telegram', 'Telegram'), ('Friend', 'Friend'), ('Facebook', 'Facebook'), ('Flayer', 'Flayer'), ('Reklama', 'Reklama')], max_length=20, null=True)),
                ('goal', models.CharField(blank=True, max_length=100, null=True)),
                ('first_lesson_day', models.DateField(null=True)),
                ('first_come_day', models.DateField(blank=True, null=True)),
                ('balance', models.IntegerField(blank=True, default=-699000, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('learning_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('test', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, choices=[('Russian', 'Russian'), ('English', 'English'), ('French', 'French'), ('German', 'German')], max_length=30, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='student.group')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to='teacher.personalinfo')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_tenants', to='account.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='balance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='student.personalinfo'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Absent', 'Absent'), ('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=10)),
                ('unit', models.CharField(max_length=200, null=True)),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.tenant')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.personalinfo')),
            ],
        ),
    ]
